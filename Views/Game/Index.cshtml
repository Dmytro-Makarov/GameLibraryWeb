@model IEnumerable<GameLibWeb.Gamegenrerelation>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Game.Media)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Info)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Developer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Publisher)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Gamegenrerelations)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Game.Rating)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @{
        var shownGames = new List<uint?>();
        @foreach (var item in Model)
        {
            if (!shownGames.Contains(item.GameId))
            {
                <tr>
                    <td>
                        @{
                            string icon = string.Format("data:image/png;base64,{0}", item.Game.Media);
                            ViewBag.ImageData = icon;
                        }
                        <img src="@icon" width="150" height="150"/>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Game.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Game.Info)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Game.Developer.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Game.Publisher.Name)
                    </td>
                    <td>
                        @{
                            string genres = "";
                            //try building from ground up
                            foreach (var relation in item.Game.Gamegenrerelations)
                            {
                                genres = genres + relation?.Genre?.Name + "; ";
                            }
                        }
                        @genres
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Game.Rating.Age)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Game.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Game.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Game.Id">Delete</a>
                    </td>
                </tr>
                uint? gameid = item.GameId;
                shownGames.Add(gameid);
            }
        }
    }
    </tbody>
</table>